name: tentura

services:
  openresty:
    hostname: openresty
    container_name: openresty
    image: vbulavintsev/openresty-tentura
    restart: unless-stopped
    depends_on:
       - hasura
       - tentura
    volumes:
      - /tmp
      - ./web:/usr/local/openresty/nginx/html:ro
      - openresty-cert:/etc/nginx/cert
    tmpfs:
      - /var/run/openresty
    ports:
      - 80:80/tcp
      - 443:443/tcp
    networks:
      - proxy
      - backend
    environment:
      - WORKERS
      - RESOLVER
      - ACME_EMAIL
      - SERVER_NAME
      - ERROR_LOG_LEVEL
      - CONTENT_EXPIRES
      - HASURA_KEEPALIVE
      - TENTURA_KEEPALIVE
      - WORKER_CONNECTIONS
      - CLIENT_MAX_BODY_SIZE
      - CLIENT_BODY_BUFFER_SIZE
    post_start:
      - command: chown nobody:nogroup /etc/nginx/cert
        user: root
    logging:
      driver: journald

  hasura:
    hostname: hasura
    container_name: hasura
    image: hasura/graphql-engine
    restart: unless-stopped
    init: true
    depends_on:
      - postgres
    networks:
      - backend
    environment:
      - TENTURA_PASSWORD
      - HASURA_GRAPHQL_ADMIN_SECRET
      - 'HASURA_GRAPHQL_ENABLE_TELEMETRY=false'
      - 'HASURA_GRAPHQL_STRINGIFY_NUMERIC_TYPES=true'
      - 'HASURA_GRAPHQL_INFER_FUNCTION_PERMISSIONS=false'
      - 'HASURA_GRAPHQL_HTTP_LOG_QUERY_ONLY_ON_ERROR=true'
      - 'HASURA_GRAPHQL_DATABASE_URL=postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres'
      - 'HASURA_GRAPHQL_JWT_SECRET={"type":"Ed25519", "key":"${JWT_PUBLIC_PEM}", "claims_map": {"x-hasura-allowed-roles": ["user", "admin"], "x-hasura-default-role": "user", "x-hasura-user-id": {"path": "$$.sub"}}}'
      - 'HASURA_GRAPHQL_EXPERIMENTAL_FEATURES=streaming_subscriptions,remove_empty_subscription_responses'
      - 'ACTION_BASE_URL=http://tentura:2080/hasura/actions'
      - 'EVENT_BASE_URL=http://tentura:2080/hasura/events'
    logging:
      driver: journald

  postgres:
    hostname: postgres
    container_name: postgres
    image: vbulavintsev/postgres-tentura
    restart: unless-stopped
    depends_on:
      - meritrank
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    networks:
      - backend
    environment:
      - POSTGRES_PASSWORD
      - 'MERITRANK_SERVICE_URL=tcp://meritrank:10234'
    logging:
      driver: journald

  meritrank:
    hostname: meritrank
    container_name: meritrank
    image: vbulavintsev/meritrank-service
    restart: unless-stopped
    read_only: true
    init: true
    networks:
      - backend
    environment:
      - 'MERITRANK_NUM_WALK=5000'
      - 'MERITRANK_ZERO_OPINION_FACTOR=2'
      - 'MERITRANK_SERVICE_URL=tcp://0.0.0.0:10234'
    logging:
      driver: journald

  tentura:
    hostname: tentura
    container_name: tentura
    image: vbulavintsev/tentura-service
    restart: unless-stopped
    depends_on:
      - postgres
    init: true
    networks:
      - backend
    environment:
      - DEBUG_MODE
      - SERVER_NAME
      - IMAGES_PATH
      - IMAGE_SERVER
      - WORKERS_COUNT
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_DBNAME
      - POSTGRES_USERNAME
      - POSTGRES_PASSWORD
      - POSTGRES_MAXCONN
      - TENTURA_PASSWORD
      - JWT_PRIVATE_PEM
      - JWT_PUBLIC_PEM
      - JWT_EXPIRES_IN
      - S3_ACCESS_KEY
      - S3_SECRET_KEY
      - S3_ENDPOINT
      - S3_BUCKET
    logging:
      driver: journald

volumes:
  openresty-cert:

networks:
  proxy:
  backend:
    internal: true
