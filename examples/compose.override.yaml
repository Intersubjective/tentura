services:
  openresty:
    restart: no
    image: vbulavintsev/openresty-tentura:v0.0.13
    volumes:
      - ./openresty/conf:/etc/nginx:ro
      - ../tentura/build/web:/usr/local/openresty/nginx/html:ro
    environment:
      - "WORKERS=2"
      - "LUA_CODE_CACHE=off"
      - "ERROR_LOG_LEVEL=debug"

  hasura:
    restart: no
    networks:
      - proxy
    ports:
      - 8080:8080/tcp
    environment:
      - "HASURA_GRAPHQL_DEV_MODE=true"
      - "HASURA_GRAPHQL_LOG_LEVEL=debug"
      - "HASURA_GRAPHQL_ENABLE_CONSOLE=true"
      - "HASURA_GRAPHQL_ENABLE_METADATA_QUERY_LOGGING=true"
      - "HASURA_GRAPHQL_CORS_DOMAIN=https://${SERVER_NAME},http://localhost:8888"
      - "HASURA_GRAPHQL_ADMIN_SECRET=password"

  postgres:
    restart: no
    image: vbulavintsev/postgres-tentura:v0.3.24
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - proxy
    ports:
      - 5432:5432/tcp

  meritrank-service:
    restart: no
    image: vbulavintsev/meritrank-service:v0.2.35
    networks:
      - proxy
    ports:
      - 10234:10234/tcp

  tentura:
    restart: no
    image: vbulavintsev/tentura-service:v0.0.6
    volumes:
      - /tmp/images:/srv/images
    networks:
      - proxy
    ports:
      - 2080:2080/tcp
    environment:
      - "SERVER_NAME=https://${SERVER_NAME}"
      - "IMAGE_SERVER=https://${SERVER_NAME}"

  schema_fetcher:
    build:
      dockerfile_inline: |
        FROM node
        RUN npm install -g get-graphql-schema
    image: vbulavintsev/schema_fetcher
    container_name: schema_fetcher
    hostname: schema_fetcher
    depends_on:
      - hasura
    restart: no
    volumes:
      - ./packages/client/lib/data/gql:/gql
    networks:
      - proxy
    user: 1000:1000
    environment:
      - HASURA_GRAPHQL_ADMIN_SECRET
    command: sh -c "get-graphql-schema -h 'x-hasura-admin-secret=${HASURA_GRAPHQL_ADMIN_SECRET}' -h 'x-hasura-role=user' http://hasura:8080/v1/graphql > /gql/schema.graphql"

volumes:
  pg_data:
